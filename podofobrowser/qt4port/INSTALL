---- Dependencies ----

podofobrowser svn generally requires PoDoFo svn to build and run. You will also
need an installed copy of TrollTech's Qt library. Linux users should make sure
the -dev or -devel package for Qt is installed too.

Windows users will need the MinGW compilation environment. The Qt installer will
download and install this for you if you don't already have it.

The open source version of Qt4 does not support building with Visual Studio.
PoDoFoBrowser should build fine with CMake and Visual Studio if you are using
a version of Qt that supports this configuration. Please report any issues with
this process, as the authors do not have easy access to this configuration.

Note that because the gcc and MSVC++ C++ APIs are incompatible (as are the ABIs
of most other C++ compilers) you must build podofobrowser with the same
compiler you used to build podofo.

---- CMake ----

The Qt4 port of PoDoFoBrowser is best built with CMake version 2.4 or newer
(CMake 2.5 from CMake CVS is best).

cmake -G "Unix Makefiles" \
	-DLIBPODOFO_DIR=/path/to/podofo_install_dir \
	-DCMAKE_INCLUDE_PATH=/path/to/extra/includes \
	-DCMAKE_LIBRARY_PATH=/path/to/extra/libraries

Windows users can also build PoDoFoBrowser using CMake. You will need an
installed copy of PoDoFo and will need to have Qt 4 installed. Set QTDIR to
point to your Qt install directory, ensure MinGW is on your PATH, and make sure
to set CMAKE_INCLUDE_PATH and CMAKE_LIBRARY_PATH to point to the same libraries
you used to build PoDoFo against (important!). LIBPODOFO_DIR should point to the
PoDoFo installation directory (NOT the build directory, which WILL NOT WORK).

SET QTDIR=c:\qt\4.2.1
SET PATH=c:\mingw\bin;%PATH%
cmake -G "MinGW Makefiles"
	-DLIBPODOFO_DIR=c:\developer\podofo_install_dir
	-DCMAKE_INCLUDE_PATH=c:\progra~1\gnuwin32\include
	-DCMAKE_LIBRARY_PATH=c:\progra~1\gnuwin32\lib

Note that PoDoFoBrowser currently only builds against an installed copy of PoDoFo,
not the podofo build tree.

---- QMake ----

You may also be able to build PoDoFoBrowser with qmake. You MUST edit the
project file to reflect your local configuration. In particular, be sure to
update INCLUDEPATH and :LIBS . Also be sure that DEFINES contains
USING_SHARED_PODOFO if and only if you are building against a copy of podofo
that was compiled as a shared library.

Once you've updated the project file and (if necessary) ensured your compiler
and qmake are on the PATH, run:

	qmake
	make
	make install

UNIX and Mac OS X users may need to use `sudo' or `su' to get the permissions
required to run `make install'.
